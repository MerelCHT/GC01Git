package Radargraph;

import java.util.Random;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Polygon;

import javax.swing.JPanel;

public class RadarGraph extends JPanel
{
	public RadarGraph()
	{
		setBackground(Color.white);
	}
	
	@Override
	public void paintComponent(Graphics g)
	{
		//clear the screen
		super.paintComponent(g);
		Graphics2D g2d = (Graphics2D) g;
		drawWeb(g2d);
		
	}
	
	private void drawWeb(Graphics2D g2d)
	{
	
		double centerX = getSize().width * 0.5;
		double centerY = getSize().height * 0.5;
		double arm = getSize().height * 0.45;
		double[] angles = new double[5];
		angles[0] = -Math.PI/2;
		int endpointX = (int) centerX + (int) (arm * Math.cos(angles[0])); ;
		int endpointY = (int) centerY + (int) (arm * Math.sin(angles[0]));;
		g2d.drawLine((int) centerX, (int) centerY, (int) endpointX, (int) endpointY);
	
		//Define an array of arrays of doubles that will hold the values for individual coloured outlines. 
		double[][] outline = new double[3][5];
		Random random = new Random();
		for(int i = 0; i < outline.length; i++){
			for(int j = 0; j < outline[i].length; j++){
				double num = random.nextDouble(); 
				outline[i][j] = Math.abs(num - 0.1 * i);
				System.out.println(outline[i][j]);
			}
		}	
		
		//Draw the 5 arms. 
		for(int i = 1; i < 5; i++){
			angles[i] = angles[i-1] +  (Math.PI*2)/5;
			endpointX = (int) centerX + (int) (arm * Math.cos(angles[i])); 	
			endpointY = (int) centerY + (int) (arm * Math.sin(angles[i]));
			
			g2d.drawLine((int) centerX, (int) centerY, (int) endpointX, (int) endpointY);
			
		}
		
		for(int n = 0; n < 200; n+=20){
			for(int i = 0; i < 5; i++){
				int startX = (int) centerX + (int) ((arm/5 + n) * Math.cos(angles[i]));
				int startY = (int) centerY + (int) ((arm/5 + n) * Math.sin(angles[i]));
				int endX = (int) centerX + (int) ((arm/5+n) * Math.cos(angles[(i+1) %5]));
				int endY = (int) centerY + (int) ((arm/5+n) * Math.sin(angles[(i+1) %5]));
				g2d.drawLine(startX, startY, endX, endY);
			}
		}
		
		//Draw 3 different pentagons. 
		for(int i = 0; i < outline.length; i++){
			switch(i){
			case 0: g2d.setColor(Color.blue); break;
			case 1: g2d.setColor(Color.red); break;
			case 2: g2d.setColor(Color.green); break;
			default: g2d.setColor(Color.black); break;
			}
			
			for(int j = 0; j < outline[i].length; j++){
				int beginOutlineX = (int) centerX + (int) (arm * outline[i][j] * Math.cos(angles[j]));
				int beginOutlineY = (int) centerY + (int) (arm * outline[i][j] * Math.sin(angles[j]));
				int endOutlineX = (int) centerX + (int) (arm * outline[i][(j + 1) % 5] * Math.cos(angles[(j + 1) %5]));
				int endOutlineY = (int) centerY + (int) (arm * outline[i][(j + 1) % 5] * Math.sin(angles[(j + 1) %5]));
				g2d.drawLine(beginOutlineX, beginOutlineY, endOutlineX, endOutlineY);
		}
		}
		

		
		
		
		
		
		

		
	}
	
}
